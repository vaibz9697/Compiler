STATEMENT 			: EXPRESSION; 
           			 | EXPRESSION; STATEMENT
                     | LOOP_STATEMENT
                     | CONDITION_STATEMENT
                     | break; 
                     | return; 
                     | return EXPRESSION;
                     | continue;
                     | switch(EXPRESSION){CASES}
EXPRESSION 			: TERM EXPRESSION'
					 | TERM EXPRESSION' OP TERM EXPRESSION'
					 | !EXPRESSION
EXPRESSION'			: +TERM EXPRESSION' 
             		 | 
OP 					: > | < | == | >= | <= | != | && | ||
TERM 				: FACTOR TERM'
TERM'               : *FACTOR TERM' 
 					 |
FACTOR              : FLOAT_ID|NUM_ID | MUTABLE | (EXPRESSION)| 
CONDITION_STATEMENT : if (EXPRESSION) {STATEMENT}
					 | NEW_CONDITION
NEW_CONDITION 		: else if (EXPRESSION) {STATEMENT}
                     | NEW_CONDITION
                     | else {STATEMENT}
                     |
-----------
#LOOPS
LOOP_STATEMENT      : WHILE_BODY 
				 	 | FOR_BODY
WHILE_BODY  		: while (EXPRESSION) {STATEMENT}
FOR_BODY 			: for(LIST_ASSIGNMENT;EXPRESSION;LIST_ASSIGNMENT) {STATEMENT}
LIST_ASSIGNMENT		: ASSIGNMENT,LIST_ASSIGNMENT
					 |
ASSIGNMENT          : MUTABLE = EXPRESSION
					 |MUTABLE += EXPRESSION
					 |MUTABLE -= EXPRESSION
					 |MUTABLE *= EXPRESSION
					 |MUTABLE /= EXPRESSION
					 |MUTABLE++
					 |MUTABLE--
					 |--MUTABLE
					 |++MUTABLE
MUTABLE				:	 ID
					 |MUTABLE[EXPRESSION]
-----------
#CASES
CASES				: case NUM_ID : STATEMENT CASES
					 | default: STATEMENT
					 | 
----------------
#COMMON_PART
STATEMENT:	CONSTRUCT;
			|FUNCTION_CALL;

CONSTRUCT:	PROCESS_CONSTRUCT
			|JOB_CONSTRUCT
			|MEMORY_CONSTRUCT
			|LINK_CONSTRUCT
			|CLUSTER_CONSTRUCT

FUNCTION_CALL:	PROCESS_CALL
				|JOB_CALL
				|MEMORY_CALL
				|LINK_CALL
				|CLUSTER_CALL

NAME_OPTIONAL :  |,name = "NAME_VALUE" | ,"NAME_VALUE"
----------------

#JOB

JOB_CONSTRUCT:	JOB_OBJECT = JOB_DEFINITION
JOB_DEFINITION:	Job(PARAMETERS_JOB_DEFINITION)
PARAMETERS_JOB_DEFINITION:	job_id=JOB_ID_VALUE, flops_required = FLOPS_REQUIRED_VALUE, deadline=DEADLINE_VALUE, mem_required = MEM_REQUIRED_VALUE, affinity = AFFINITY_VALUE

JOB_OBJECT:	MUTABLE
JOB_ID_VALUE:	NUM_ID
FLOPS_REQUIRED_VALUE:	NUM_ID
DEADLINE_VALUE:NUM_ID
MEM_REQUIRED_VALUE:NUM_ID
AFFINITY_VALUE:	[AMD_value , CDC_value , MIPS_value ,DEC_value ]
AMD_value:	NUM_ID
CDC_value:	NUM_ID
MIPS_value:	NUM_ID
DEC_value:	NUM_ID

JOB_CALL:JOB_OBJECT.get_memory()

----------------
#PROCESS 

PROCESS_CONSTRUCT:	PROCESS_OBJECT = PROCESS_DEFINITION
PROCESS_DEFINITION:	Processor(PARAMETERS_PROCESS_DEFINITION)
PARAMETERS_PROCESS_DEFINITION:	isa="ISA_VALUE", clock_speed:CLOCK_VALUE, l1_memory = L1_VALUE MEMORY_OPTIONAL_L2 NAME_OPTIONAL
MEMORY_OPTIONAL_L2: 
					|,l2_memory=L1_VALUE
				
PROCESS_OBJECT:MUTABLE
ISA_VALUE:	ARM
			|AMD
			|CDC
			|MIPS
CLOCK_VALUE:NUM_ID
L1_VALUE:	MEMORY_OBJECT
			|MEMORY_DEFINITION
NAME_VALUE:	MUTABLE


PROCESS_CALL:	PROCESS_OBJECT.is_running()
				|PROCESS_OBJECT.submit_jobs(PARAM_PROCESS_SUBMIT_DISCARD_JOBS)
				|PROCESS_OBJECT.get_clock_speed()
				|run(PARAM_RUNPROCESS)
				|PROCESS_OBJECT.discard_jobs(PARAM_PROCESS_SUBMIT_DISCARD_JOBS)
PARAM_PROCESS_SUBMIT_DISCARD_JOBS:	JOB_OBJECT
									|[JOB_LISTS]
JOB_LISTS:	JOB_OBJECT,JOB_LISTS
			|JOB_OBJECT

PARAM_RUNPROCESS:PROCESS_OBJECT|[PROCESS_LISTS]
PROCESS_LISTS:	PROCESS_OBJECT,PROCESS_LISTS
				|PROCESS_OBJECT				

----------------
### MEMORY FUNCTION 

MEMORY_CONSTRUCT:	MEMORY_OBJECT = MEMORY_DEFINITION
MEMORY_DEFINITION:	Memory(PARAMETERS_MEMORY_DEFINITION)
PARAMETERS_MEMORY_DEFINITION:	MEMORY_TYPENT, MEM_SIZENT NAME_OPTIONAL
MEMORY_TYPENT : "MEM_VALUE"| memory_type="MEM_VALUE"

MEM_SIZENT : MEM_SIZE_VALUE | mem_size = MEM_SIZE_VALUE



MEM_VALUE:primary
		  |secondary
		  |cache 

MEM_SIZE_VALUE: NUM_ID 
NAME_VALUE:MUTABLE 

MEMORY_CALL:MEMORY_OBJECT.get_available_memory()

---------------
## LINK FUNCTION 

LINK_CONSTRUCT:	LINK_OBJECT = LINK_DEFINITION
LINK_DEFINITION:	LINK(PARAMETERS_LINK_DEF)
PARAMETER_LINK_DEF : START_POINTNT , END_POINTNT, BANDWITDTHNT , CHANNEL_CAPACITYNT NAME_OPTIONAL

START_POINTNT : "START_VALUE" |  START_POINT = "START_VALUE"
START_VALUE : ID

END_POINTNT : "END_VALUE" | END_POINT = "END_VALUE"
END_VALUE : ID 

BANDWIDTHNT : BANDWIDTH_VALUE | BANDWITDTH = BANDWIDTH_VALUE
BANDWIDTH_VALUE : NUM_ID 

CHANNEL_CAPACITYNT : CHANNEL_CAPACITY_VALUE | CHANNEL_CAPACITY = CHANNEL_CAPACITY_VALUE
CHANNEL_CAPACITY_VALUE : FLOAT_ID

------------
## CLUSTER 
CLUSTER_CONSTRUCT:	CLUSTER_OBJECT=Cluster(PARAMETERS_CLUSTER_DEF)
PARAMETERS_CLUSTER_DEF:	PROCESSORSNT,TOPOLOGYNT,LINK_BANDWIDTH_VALUE,LINK_CAPICITY_VALUE NAME_OPTIONAL
CLUSTER_OBJECT:ID
PROCESSORSNT:processors=PARAM1_VALUE
			|PARAM1_VALUE
TOPOLOGYNT:topology="TOPOLOGYVALUE"
			|"TOPOLOGYVALUE"	
PARAM1_VALUE:	PROCESSOR_ARRAY_OBJECT
			|	CLUSTER_ARRAY_OBJECT
			|	[PROCESS_LISTS]
			|	[CLUSTER_LISTS]
CLUSTER_ARRAY_OBJECT:ID
CLUSTER_LISTS: CLUSTER_OBJECT,CLUSTER_LISTS
			|CLUSTER_OBJECT
TOPOLOGY_VALUE:star
				|bus
				|ring
LINK_BANDWIDTH_VALUE:	ID
LINK_CAPICIT_VALUE:	ID		













